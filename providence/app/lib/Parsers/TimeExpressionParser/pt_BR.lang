# *** use ONLY lowercase letters in lists: input will be forced to lowercase for comparison ***

# List month names; used whenever name of month needs to be displayed
monthList = [january, february, march, april, may, june, july, august, september, october, november, december]

# *** the following list of months is for display and *SHOULD* be capitalized where appropriate
monthListDisplay = [January, February, March, April, May, June, July, August, September, October, November, December]

# Hash table mapping acceptable month names to the display names defined in 'monthList'
monthTable = {
	jan = janeiro, january, jan. = janeiro, january,
	fev = fevereiro, february, feb. = fevereiro, february,
	mar = março, march, mar. = março, march,
	abr = abril, april, abr. = abril, april,
	mai = maio, may, mai. = maio
	jun = junho, june, jun. = junho, june,
	jul = julho, july, jul. = julho, july,
	ago = agosto, august, ago. = agosto, august,
	set = setembro, september, set. = setembro, september,
	out = outubro, october, out. = outubro, october,
	nov = novembro, november, nov. = novembro, november,
	dez = dezembro, december, dez. = dezembro, december
}

# List of day names, starting with Sunday
dayListDisplay = [Domingo, Segunda-feira, Terça-feira, Quarta-feira, Quinta-feira, Sexta-feira, Sábado]

rangePreConjunctions = [from, between]
rangeConjunctions = [–, -, to, and, .., through, or]

dateTimeConjunctions = [at,@, em]

dateDelimiters = [/,-,.]
timeDelimiters = [:,.]

timeAMMeridian = am
timePMMeridian = pm

meridianTable = {
	a.m. = am,
	p.m. = pm
}

dateCircaIndicator = [circa, c, c., ca, ca., about, early, late, mid]
dateProbablyIndicator = [probably, possibly, possivelmente]
dateUncertaintyIndicator = [~]
dateUncertaintyYearIndicator = [y, a]
dateUncertaintyDayIndicator = [d]

# What to use to indicate a geological date ("millions of years ago")
dateMYA = [mya, maa]

# What to use to indicate radiocarbon dates ("before present")
dateBP = [bp, ap]

dateADIndicator = CE
dateBCIndicator = BCE
ADBCTable = {
	ad = CE,
	a.d. = CE,
	AD = CE,
	bc = BCE,
	b.c. = BCE,
	BC = BCE,
	c.e. = CE,
	b.c.e. = BCE,
	ce = CE,
	bce = BCE
}

nowDate = [agora]
todayDate = [hoje]
yesterdayDate = [ontem]
tomorrowDate = [amanhã]
undatedDate = [desconhecido, undated, unknown]

presentDate = [presente, present, ?, ??, ???, ????]
beforeQualifier = [anterior, before, prior to]
earlyQualifier = [início, early]
midQualifier = [meio, mid, middle]
lateQualifier = [final, late]
diedQualifier = [d., d, died]
afterQualifier = [após, after, later than]
bornQualifier = [b., b, born]

# Text to indicate century (as in "20th century")
centuryIndicator = [século, S., s., century, cent]

# Text to indicate decade (as in "1920s")
decadeIndicator = [s]

# list of numeric suffixes, starting with the one for zero
# (eg. 0th, 1st, 2nd, 3rd would be a list like so: [th, st, nd, rd])
ordinalSuffixes = []
ordinalSuffixDefault = 
ordinalSuffixExceptions = {
	
}

# in delimited dates (ex. 12/10/2009) is the first number a month or a day?
# set to "0" for European style dates (day comes first); "1" for American-style dates (month comes first)
monthComesFirstInDelimitedDate = 0

# character(s) to append to day in full (not delimited) date
# eg. in the date "1. February 2009", "." is the daySuffix
# Note: you can put arbitrary text here - only punctuation
daySuffix = 

# Definite articles
definiteArticles = [the]

# Indefinite articles
indefiniteArticles = [a, an]

# Seasons
winterSeason = [inverno, winter]
springSeason = [primavera, spring]
summerSeason = [verão, summer]
autumnSeason = [outono, autumn, fall]
